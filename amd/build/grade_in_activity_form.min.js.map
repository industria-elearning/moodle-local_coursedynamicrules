{"version":3,"file":"grade_in_activity_form.min.js","sources":["../src/grade_in_activity_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module grade_in_activity_form\n *\n * @module     local_coursedynamicrules/grade_in_activity_form\n * @copyright  2024 Industria Elearning <info@industriaelearning.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\n\n/**\n * Initializes the dynamic form handling.\n */\nexport function init() {\n    const formContainer = document.querySelector('[data-region=dynamicform]');\n    const dynamicForm = createDynamicForm(formContainer);\n    handleLoadForm(dynamicForm);\n}\n\n/**\n * Creates a new dynamic form instance.\n *\n * @param {HTMLElement} container The container element for the form.\n * @return {DynamicForm} The dynamic form instance.\n */\nfunction createDynamicForm(container) {\n    const dynamicForm = new DynamicForm(\n        container,\n        'local_coursedynamicrules\\\\form\\\\conditions\\\\dynamic_grade_in_activity_form'\n    );\n\n    return dynamicForm;\n}\n\n/**\n * Handles the form loading process.\n *\n * @param {DynamicForm} dynamicForm The dynamic form instance.\n */\nfunction handleLoadForm(dynamicForm) {\n    const loadPromise = new Pending(' local_coursedynamicrules/grade_in_activity_form:load');\n    const courseId = document.querySelector('[name=courseid]').value;\n    dynamicForm.load({courseid: courseId})\n        .then(() => {\n            attachCourseModuleChangeListener(dynamicForm);\n            resetGradeItems();\n            updateGradeItems();\n            return loadPromise.resolve();\n        })\n        .catch(Notification.exception);\n}\n\n/**\n * Attaches a change event listener to the course module select element.\n *\n * @param {DynamicForm} dynamicForm The dynamic form instance.\n */\nfunction attachCourseModuleChangeListener(dynamicForm) {\n    const courseModuleSelect = document.querySelector('[name=coursemodule]');\n\n    if (!courseModuleSelect) {\n        Notification.addNotification({\n            message: 'Course module select element not found.',\n            type: 'warning',\n        });\n        return;\n    }\n\n    courseModuleSelect.addEventListener('change', (e) => {\n        handleCourseModuleChange(dynamicForm, e.target.value);\n    });\n}\n\n/**\n * Handles the course module change event.\n *\n * @param {DynamicForm} dynamicForm The dynamic form instance.\n * @param {string} courseModuleValue The selected course module value.\n */\nfunction handleCourseModuleChange(dynamicForm, courseModuleValue) {\n    const updatePromise = new Pending('local_coursedynamicrules/grade_in_activity_form:update');\n\n    const courseId = document.querySelector('[name=courseid]').value;\n    dynamicForm.load({coursemodule: courseModuleValue, courseid: courseId})\n    .then(() => {\n        attachCourseModuleChangeListener(dynamicForm);\n        resetGradeItems();\n        updateGradeItems(dynamicForm);\n        return updatePromise.resolve();\n    })\n    .catch(Notification.exception);\n}\n\n/**\n * Resets the grade items field.\n */\nfunction resetGradeItems() {\n    document.querySelector('[name=gradeitems]').value = JSON.stringify({});\n}\n\n/**\n * Updates the grade items based on the current form state.\n *\n */\nfunction updateGradeItems() {\n    const cmId = document.querySelector('[name=coursemodule]').value;\n    document.querySelector('[name=cmid]').value = cmId;\n    const cmConditionInputs = document.querySelectorAll(`[data-cmid='${cmId}']`);\n\n    cmConditionInputs.forEach((input) => {\n        updateGradeItem(input);\n\n        input.addEventListener('change', (e) => {\n            updateGradeItem(e.target);\n        });\n    });\n}\n\n/**\n * Updates a single grade item based on the input element.\n *\n * @param {HTMLElement} input The input element.\n */\nfunction updateGradeItem(input) {\n    const gradeItems = document.querySelector('[name=gradeitems]').value;\n    const gradeItemsObject = JSON.parse(gradeItems);\n\n    const condition = input.dataset.condition;\n    const gradeItem = input.dataset.gradeitem;\n    const value = input.value;\n    const disabled = input.getAttribute('disabled') === 'disabled';\n    const gradeItemKey = `${condition}_${gradeItem}`;\n\n    gradeItemsObject[gradeItemKey] = {\n        gradeitem: gradeItem,\n        condition: condition,\n        value: value,\n        disabled: disabled,\n    };\n\n    document.querySelector('[name=gradeitems]').value = JSON.stringify(gradeItemsObject);\n}\n\n"],"names":["attachCourseModuleChangeListener","dynamicForm","courseModuleSelect","document","querySelector","addEventListener","e","courseModuleValue","updatePromise","Pending","courseId","value","load","coursemodule","courseid","then","resetGradeItems","updateGradeItems","resolve","catch","Notification","exception","handleCourseModuleChange","target","addNotification","message","type","JSON","stringify","cmId","querySelectorAll","forEach","input","updateGradeItem","gradeItems","gradeItemsObject","parse","condition","dataset","gradeItem","gradeitem","disabled","getAttribute","formContainer","loadPromise","handleLoadForm","container","DynamicForm"],"mappings":";;;;;;;cA0ESA,iCAAiCC,mBAChCC,mBAAqBC,SAASC,cAAc,uBAE7CF,mBAQLA,mBAAmBG,iBAAiB,UAAWC,cAWjBL,YAAaM,yBACrCC,cAAgB,IAAIC,iBAAQ,0DAE5BC,SAAWP,SAASC,cAAc,mBAAmBO,MAC3DV,YAAYW,KAAK,CAACC,aAAcN,kBAAmBO,SAAUJ,WAC5DK,MAAK,KACFf,iCAAiCC,aACjCe,kBACAC,mBACOT,cAAcU,aAExBC,MAAMC,sBAAaC,WArBhBC,CAAyBrB,YAAaK,EAAEiB,OAAOZ,gCARlCa,gBAAgB,CACzBC,QAAS,0CACTC,KAAM,qBAiCTV,kBACLb,SAASC,cAAc,qBAAqBO,MAAQgB,KAAKC,UAAU,aAO9DX,yBACCY,KAAO1B,SAASC,cAAc,uBAAuBO,MAC3DR,SAASC,cAAc,eAAeO,MAAQkB,KACpB1B,SAAS2B,uCAAgCD,YAEjDE,SAASC,QACvBC,gBAAgBD,OAEhBA,MAAM3B,iBAAiB,UAAWC,IAC9B2B,gBAAgB3B,EAAEiB,uBAUrBU,gBAAgBD,aACfE,WAAa/B,SAASC,cAAc,qBAAqBO,MACzDwB,iBAAmBR,KAAKS,MAAMF,YAE9BG,UAAYL,MAAMM,QAAQD,UAC1BE,UAAYP,MAAMM,QAAQE,UAC1B7B,MAAQqB,MAAMrB,MACd8B,SAA8C,aAAnCT,MAAMU,aAAa,YAGpCP,2BAFwBE,sBAAaE,YAEJ,CAC7BC,UAAWD,UACXF,UAAWA,UACX1B,MAAOA,MACP8B,SAAUA,UAGdtC,SAASC,cAAc,qBAAqBO,MAAQgB,KAAKC,UAAUO,yGA9H7DQ,cAAgBxC,SAASC,cAAc,uCAyBzBH,mBACd2C,YAAc,IAAInC,iBAAQ,yDAC1BC,SAAWP,SAASC,cAAc,mBAAmBO,MAC3DV,YAAYW,KAAK,CAACE,SAAUJ,WACvBK,MAAK,KACFf,iCAAiCC,aACjCe,kBACAC,mBACO2B,YAAY1B,aAEtBC,MAAMC,sBAAaC,WAjCxBwB,EASuBC,UAVeH,cAWlB,IAAII,qBACpBD,UACA,oFAHmBA"}