{"version":3,"file":"grade_in_activity_form.min.js","sources":["../src/grade_in_activity_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module grade_in_activity_form\n *\n * @module     local_coursedynamicrules/grade_in_activity_form\n * @copyright  2024 Industria Elearning <info@industriaelearning.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\n\n/**\n * Initializes the dynamic form handling.\n */\nexport function init() {\n    const formContainer = document.querySelector('[data-region=dynamicform]');\n    const dynamicForm = createDynamicForm(formContainer);\n    handleLoadForm(dynamicForm);\n}\n\n/**\n * Creates a new dynamic form instance.\n *\n * @param {HTMLElement} container The container element for the form.\n * @return {DynamicForm} The dynamic form instance.\n */\nfunction createDynamicForm(container) {\n    const dynamicForm = new DynamicForm(\n        container,\n        'local_coursedynamicrules\\\\form\\\\conditions\\\\dynamic_grade_in_activity_form'\n    );\n\n    return dynamicForm;\n}\n\n/**\n * Handles the form loading process.\n *\n * @param {DynamicForm} dynamicForm The dynamic form instance.\n */\nfunction handleLoadForm(dynamicForm) {\n    const loadPromise = new Pending(' local_coursedynamicrules/grade_in_activity_form:load');\n\n    dynamicForm.load()\n        .then(() => {\n            attachCourseModuleChangeListener(dynamicForm);\n            return loadPromise.resolve();\n        })\n        .catch(Notification.exception);\n}\n\n/**\n * Attaches a change event listener to the course module select element.\n *\n * @param {DynamicForm} dynamicForm The dynamic form instance.\n */\nfunction attachCourseModuleChangeListener(dynamicForm) {\n    const courseModuleSelect = document.querySelector('[name=coursemodule]');\n\n    if (!courseModuleSelect) {\n        Notification.addNotification({\n            message: 'Course module select element not found.',\n            type: 'warning',\n        });\n        return;\n    }\n\n    courseModuleSelect.addEventListener('change', (e) => {\n        handleCourseModuleChange(dynamicForm, e.target.value);\n    });\n}\n\n/**\n * Handles the course module change event.\n *\n * @param {DynamicForm} dynamicForm The dynamic form instance.\n * @param {string} courseModuleValue The selected course module value.\n */\nfunction handleCourseModuleChange(dynamicForm, courseModuleValue) {\n    const updatePromise = new Pending('local_coursedynamicrules/grade_in_activity_form:update');\n\n    dynamicForm.load({coursemodule: courseModuleValue})\n    .then(() => {\n        attachCourseModuleChangeListener(dynamicForm);\n        return updatePromise.resolve();\n    })\n    .catch(Notification.exception);\n}\n\n"],"names":["attachCourseModuleChangeListener","dynamicForm","courseModuleSelect","document","querySelector","addEventListener","e","courseModuleValue","updatePromise","Pending","load","coursemodule","then","resolve","catch","Notification","exception","handleCourseModuleChange","target","value","addNotification","message","type","formContainer","loadPromise","handleLoadForm","container","DynamicForm"],"mappings":";;;;;;;cAwESA,iCAAiCC,mBAChCC,mBAAqBC,SAASC,cAAc,uBAE7CF,mBAQLA,mBAAmBG,iBAAiB,UAAWC,cAWjBL,YAAaM,yBACrCC,cAAgB,IAAIC,iBAAQ,0DAElCR,YAAYS,KAAK,CAACC,aAAcJ,oBAC/BK,MAAK,KACFZ,iCAAiCC,aAC1BO,cAAcK,aAExBC,MAAMC,sBAAaC,WAlBhBC,CAAyBhB,YAAaK,EAAEY,OAAOC,gCARlCC,gBAAgB,CACzBC,QAAS,0CACTC,KAAM,mGA/CRC,cAAgBpB,SAASC,cAAc,uCAyBzBH,mBACduB,YAAc,IAAIf,iBAAQ,yDAEhCR,YAAYS,OACPE,MAAK,KACFZ,iCAAiCC,aAC1BuB,YAAYX,aAEtBC,MAAMC,sBAAaC,WA/BxBS,EASuBC,UAVeH,cAWlB,IAAII,qBACpBD,UACA,oFAHmBA"}