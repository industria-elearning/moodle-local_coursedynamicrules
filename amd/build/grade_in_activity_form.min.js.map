{"version":3,"file":"grade_in_activity_form.min.js","sources":["../src/grade_in_activity_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module grade_in_activity_form\n *\n * @module     local_coursedynamicrules/grade_in_activity_form\n * @copyright  2024 Industria Elearning <info@industriaelearning.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\n\n/**\n * Initializes the dynamic form handling.\n */\nexport function init() {\n    const formContainer = document.querySelector('[data-region=dynamicform]');\n    const dynamicForm = createDynamicForm(formContainer);\n    handleLoadForm(dynamicForm);\n}\n\n/**\n * Creates a new dynamic form instance.\n *\n * @param {HTMLElement} container The container element for the form.\n * @return {DynamicForm} The dynamic form instance.\n */\nfunction createDynamicForm(container) {\n    const dynamicForm = new DynamicForm(\n        container,\n        'local_coursedynamicrules\\\\form\\\\conditions\\\\dynamic_grade_in_activity_form'\n    );\n\n    return dynamicForm;\n}\n\n/**\n * Handles the form loading process.\n *\n * @param {DynamicForm} dynamicForm The dynamic form instance.\n */\nfunction handleLoadForm(dynamicForm) {\n    const loadPromise = new Pending(' local_coursedynamicrules/grade_in_activity_form:load');\n    const courseId = document.querySelector('[name=courseid]').value;\n    dynamicForm.load({courseid: courseId})\n        .then(() => {\n            attachCourseModuleChangeListener(dynamicForm);\n\n            // Handle gradeitems dynamics conditions.\n            document.querySelector('[name=gradeitems]').value = JSON.stringify({});\n\n            const cmId = document.querySelector('[name=coursemodule]').value;\n\n            document.querySelector('[name=cmid]').value = cmId;\n            const cmConditionInputs = document.querySelectorAll(`[data-cmid='${cmId}']`);\n\n            cmConditionInputs.forEach((input) => {\n                const gradeItems = document.querySelector('[name=gradeitems]').value;\n                const gradeItemsObject = JSON.parse(gradeItems);\n\n                const condition = input.dataset.condition;\n                const gradeItem = input.dataset.gradeitem;\n                const value = input.value;\n                const gradeItemKey = `${condition}_${gradeItem}`;\n                gradeItemsObject[gradeItemKey] = {\n                    gradeitem: gradeItem,\n                    condition: condition,\n                    value: value,\n                };\n\n                document.querySelector('[name=gradeitems]').value = JSON.stringify(gradeItemsObject);\n\n                input.addEventListener('change', (e) => {\n                    const gradeItems = document.querySelector('[name=gradeitems]').value;\n                    const gradeItemsObject = JSON.parse(gradeItems);\n\n                    const condition = e.target.dataset.condition;\n                    const gradeItem = e.target.dataset.gradeitem;\n                    const value = e.target.value;\n                    const gradeItemKey = `${condition}_${gradeItem}`;\n\n                    gradeItemsObject[gradeItemKey] = {\n                        gradeitem: gradeItem,\n                        condition: condition,\n                        value: value,\n                    };\n\n                    document.querySelector('[name=gradeitems]').value = JSON.stringify(gradeItemsObject);\n                });\n            });\n\n            // Handle inputs validation and submission.\n            const gradeInActivityForm = document.getElementById('grade_in_activity_form');\n            const dynamicGradeInActivityForm = document.getElementById('dynamic_grade_in_activity_form');\n            gradeInActivityForm.addEventListener('submit', (e) => {\n                e.preventDefault();\n                const cmId = document.querySelector('[name=coursemodule]').value;\n                const cmConditionInputs = document.querySelectorAll(`[data-cmid='${cmId}']`);\n\n                cmConditionInputs.forEach((input) => {\n                    // eslint-disable-next-line no-console\n                    console.log(input.value);\n\n                    if (input.value > 4) {\n                        const id = input.id;\n                        const invalidFeedback = document.querySelector(`.invalid-feedback#${id}`);\n                        invalidFeedback.textContent = 'The grade must be between 0 and 4.';\n                        input.setCustomValidity('The grade must be between 0 and 4.');\n                    }\n                });\n\n                dynamicGradeInActivityForm.classList.add('was-validated');\n\n                if (dynamicGradeInActivityForm.checkValidity()) {\n                    gradeInActivityForm.submit();\n                    return;\n                }\n            });\n\n            return loadPromise.resolve();\n        })\n        .catch(Notification.exception);\n}\n\n/**\n * Attaches a change event listener to the course module select element.\n *\n * @param {DynamicForm} dynamicForm The dynamic form instance.\n */\nfunction attachCourseModuleChangeListener(dynamicForm) {\n    const courseModuleSelect = document.querySelector('[name=coursemodule]');\n\n    if (!courseModuleSelect) {\n        Notification.addNotification({\n            message: 'Course module select element not found.',\n            type: 'warning',\n        });\n        return;\n    }\n\n    courseModuleSelect.addEventListener('change', (e) => {\n        handleCourseModuleChange(dynamicForm, e.target.value);\n    });\n}\n\n/**\n * Handles the course module change event.\n *\n * @param {DynamicForm} dynamicForm The dynamic form instance.\n * @param {string} courseModuleValue The selected course module value.\n */\nfunction handleCourseModuleChange(dynamicForm, courseModuleValue) {\n    const updatePromise = new Pending('local_coursedynamicrules/grade_in_activity_form:update');\n\n    const courseId = document.querySelector('[name=courseid]').value;\n    dynamicForm.load({coursemodule: courseModuleValue, courseid: courseId})\n    .then(() => {\n        attachCourseModuleChangeListener(dynamicForm);\n\n        document.querySelector('[name=cmid]').value = courseModuleValue;\n\n        document.querySelector('[name=gradeitems]').value = JSON.stringify({});\n\n        const cmId = document.querySelector('[name=coursemodule]').value;\n        const cmConditionInputs = document.querySelectorAll(`[data-cmid='${cmId}']`);\n\n        cmConditionInputs.forEach((input) => {\n            const gradeItems = document.querySelector('[name=gradeitems]').value;\n            const gradeItemsObject = JSON.parse(gradeItems);\n\n            const condition = input.dataset.condition;\n            const gradeItem = input.dataset.gradeitem;\n            const value = input.value;\n            const disabled = input.getAttribute('disabled') === 'disabled';\n            const gradeItemKey = `${condition}_${gradeItem}`;\n            gradeItemsObject[gradeItemKey] = {\n                gradeitem: gradeItem,\n                condition: condition,\n                value: value,\n                disabled: disabled,\n            };\n\n            document.querySelector('[name=gradeitems]').value = JSON.stringify(gradeItemsObject);\n\n            input.addEventListener('change', (e) => {\n                const gradeItems = document.querySelector('[name=gradeitems]').value;\n                const gradeItemsObject = JSON.parse(gradeItems);\n\n                const condition = e.target.dataset.condition;\n                const gradeItem = e.target.dataset.gradeitem;\n                const value = e.target.value;\n                const gradeItemKey = `${condition}_${gradeItem}`;\n\n                const disabled = e.target.getAttribute('disabled') === 'disabled';\n\n                gradeItemsObject[gradeItemKey] = {\n                    gradeitem: gradeItem,\n                    condition: condition,\n                    value: value,\n                    disabled: disabled,\n                };\n\n                document.querySelector('[name=gradeitems]').value = JSON.stringify(gradeItemsObject);\n            });\n        });\n        return updatePromise.resolve();\n    })\n    .catch(Notification.exception);\n}\n\n"],"names":["attachCourseModuleChangeListener","dynamicForm","courseModuleSelect","document","querySelector","addEventListener","e","courseModuleValue","updatePromise","Pending","courseId","value","load","coursemodule","courseid","then","JSON","stringify","cmId","querySelectorAll","forEach","input","gradeItems","gradeItemsObject","parse","condition","dataset","gradeItem","gradeitem","disabled","getAttribute","target","gradeItemKey","resolve","catch","Notification","exception","handleCourseModuleChange","addNotification","message","type","formContainer","loadPromise","gradeInActivityForm","getElementById","dynamicGradeInActivityForm","preventDefault","console","log","id","textContent","setCustomValidity","classList","add","checkValidity","submit","handleLoadForm","container","DynamicForm"],"mappings":"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"}